{"version":3,"sources":["Header.js","Board.js","GameInfo.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","boardInfo","shipHitMessage","winStatus","Component","Board","cellStyle","height","boxSize","style","onClick","fireClick","id","GameInfo","reset","e","preventDefault","_this","torpedoCount","onSubmit","type","battleShipRemains","battleShipTotal","shipInfo","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getScreenWidth","de","document","body","parentNode","db","window","opera","clientWidth","compatMode","location","reload","createBoard","_this$state","state","boardArray","boardSize","Array","Math","pow","fill","setState","placeShip","_this$state2","shipPosition","shipCount","length","currentShipPosition","loopBreaker","shipNamePosition","noOfShip","firstShipPosition","floor","random","shipDirection","x","trunc","y","digit","checkPositionCount","i","push","console","log","cellId","parseInt","target","_this$state3","shipHitCondition","clickedCellArray","getElementById","pos","getIndexOfHit","shipRemain","reduce","b","concat","map","v","backgroundColor","arr","k","index","indexOf","boardColWidth","_this$state4","screenWidth","currentShipHitCondition","xBefore","xAfter","yBefore","yAfter","_this2","grids","src_Board","boardValue","gridStyle","display","margin","justifyContent","gridTemplateColumns","join","src_Header","src_GameInfo","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.bcc4ba26.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"title-header\">\r\n\t\t\t\tBattleship Game\r\n\t\t\t\t<p>{this.props.boardInfo.shipHitMessage}{this.props.boardInfo.winStatus}</p>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react';\r\n\r\n\r\nclass Board extends Component{\r\n// fire=(e)=>{\r\n// \te.preventDefault();\r\n// \tthis.props.fireClick();\r\n// }\r\n\t\t\t\t// {this.props.boardValue}\r\n\trender(){\r\n\t\tlet cellStyle={\r\n\t      height: this.props.boxSize\r\n\t    }\r\n\t\treturn (\r\n\t\t\t<div style={cellStyle} className=\"cell\" onClick={this.props.fireClick} id={this.props.id}>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Board","import React, { Component } from 'react';\r\n\r\nclass GameInfo extends Component{\r\n\treset=(e)=>{\r\n\t\t// prevent page refresh\r\n\t\te.preventDefault()\r\n\t\t// call board initialize function\r\n\t\tthis.props.reset()\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Torpedo Remains : {this.props.boardInfo.torpedoCount}</p>\r\n\t\t\t\t\t<form className=\"form-button\" onSubmit={this.reset}>\r\n\t\t\t\t\t\t<button className=\"button1\" type=\"submit\">Reset</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\tShip Remains : {this.props.boardInfo.battleShipRemains}/{this.props.boardInfo.battleShipTotal}<br/>\r\n\t\t\t\t\t{this.props.boardInfo.shipInfo[0][1]}({this.props.boardInfo.shipInfo[0][2]}Blocks) : {this.props.boardInfo.shipInfo[0][4]}/{this.props.boardInfo.shipInfo[0][3]} <br/>\r\n\t\t\t\t\t{this.props.boardInfo.shipInfo[1][1]}({this.props.boardInfo.shipInfo[1][2]}Blocks) : {this.props.boardInfo.shipInfo[1][4]}/{this.props.boardInfo.shipInfo[1][3]}<br/>\r\n\t\t\t\t\t{this.props.boardInfo.shipInfo[2][1]}({this.props.boardInfo.shipInfo[2][2]}Blocks) : {this.props.boardInfo.shipInfo[2][4]}/{this.props.boardInfo.shipInfo[2][3]}<br/>\r\n\t\t\t\t\t{this.props.boardInfo.shipInfo[3][1]}({this.props.boardInfo.shipInfo[3][2]}Blocks) : {this.props.boardInfo.shipInfo[3][4]}/{this.props.boardInfo.shipInfo[3][3]}<br/>\r\n\t\t\t\t\t{this.props.boardInfo.shipInfo[4][1]}({this.props.boardInfo.shipInfo[4][2]}Blocks) : {this.props.boardInfo.shipInfo[4][4]}/{this.props.boardInfo.shipInfo[4][3]}<br/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default GameInfo","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Board from './Board';\nimport GameInfo from './GameInfo';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      boardSize: 10,\n      //0: available, 1: empty hit, 10: ship, 11: ship hit \n      boardArray:[],\n      torpedoCount:50,\n      //s1: ship key, ship name, ship size, no of ship, no ship remain\n      shipInfo:[[1,\"Carrier\",5,1,1], [2,\"Battleship\",4,2,2], [3,\"Destroyer\",3,2,2], [4,\"Submarine\",3,2,2], [5,\"Patrol Boat\",2,2,2]],\n      shipPosition:[],\n      shipHitCondition:[],\n      boardColWidth : [],\n      shipHitMessage:\"\",\n      winStatus:\"\",\n      battleShipTotal:0,\n      battleShipRemains:0,\n      clickedCellArray:[],\n      boxSize: '50px'\n    }\n  }\n\n  getScreenWidth=()=>{  \n     var de = document.body.parentNode;\n     var db = document.body;\n     if(window.opera) return db.clientWidth;\n     if (document.compatMode=='CSS1Compat') return de.clientWidth;\n     else return db.clientWidth;\n  }\n\n\ncomponentDidMount(){\n  let {boardSize, boardArray, torpedoCount, shipInfo, shipPosition, shipHitCondition, boardColWidth, battleShipRemains, battleShipTotal, boxSize} = this.state;\n  //fill initial board data with 0\n  boardArray = Array(boardSize**2).fill(0);\n  let screenWidth = this.getScreenWidth()\n  if(screenWidth< 500){\n    boxSize = '40px';\n  }\n  console.log('screenWidth',screenWidth)\n  //set up column width\n  boardColWidth = Array(boardSize).fill(boxSize)\n  // this.createBoard();\n  // this.placeShip();\n\n  let shipCount = shipInfo.length;\n  let currentShipPosition=[];\n  let currentShipHitCondition=[];\n  let loopBreaker = 1000;\n  //loop untill all ships are placed\n  battleShipRemains = shipInfo.map(v=>v[4]).reduce((a,b)=>a+b)\n  battleShipTotal = battleShipRemains;\n  while(shipCount > 0){\n    //start with shipInfo[0]\n    let shipNamePosition = shipInfo.length - shipCount\n    //0: kinds of ships, 1: name of ships, 2:length of ships, 3: # of ships\n    let noOfShip = shipInfo[shipNamePosition][3]\n    //loop until # of ships are placed\n    while(noOfShip>0){\n      // set up random position and direction\n      // let shipDirection = 1\n      let shipDirection = Math.floor(Math.random()*2)\n      let firstShipPosition = Math.floor(Math.random()*boardSize**2)\n      // console.log(\"firstShipPosition \", firstShipPosition, shipDirection)\n      // x: thens' digit, y = units' digit\n      let x = Math.trunc(firstShipPosition/boardSize)%boardSize; \n      let y = firstShipPosition % boardSize;\n      // console.log(\"loopBreaker:\", loopBreaker)\n      if(loopBreaker<0){\n        noOfShip--\n        shipCount--\n        break;\n      }\n      // if 1st position of ship + ship size is less than board size w/direction & digit match (0, x), (1, y) \n      if((shipDirection === 0 && x + shipInfo[shipNamePosition][2]<boardSize)||(shipDirection === 1 && y + shipInfo[shipNamePosition][2]<boardSize)){\n        // direction : 0 = ten, 1 = one\n        let digit = shipDirection ===0 ? boardSize**1:boardSize**0\n        // check if any of ship positions are empty\n        let checkPositionCount = 0;\n        for(let i = 0;i<shipInfo[shipNamePosition][2];i++){\n          // check left,right,up,down position\n          let xBefore = x-1 <0 ? x : x-1\n          let xAfter = x+1 >= boardSize ? x : x+1\n          let yBefore = y-1 < 0 ? y : y-1\n          let yAfter = y+1 >= boardSize ? y : y+1\n          if((boardArray[x*boardSize+y+i*digit]===0)&&(boardArray[(xBefore)*boardSize+y+i*digit]===0)&&(boardArray[(xAfter)*boardSize+y+i*digit]===0)&&(boardArray[x*boardSize+(yAfter)+i*digit]===0)&&(boardArray[x*boardSize+(yBefore)+i*digit]===0)){\n          // if(boardArray[x*boardSize+y+i*digit]===0){\n            checkPositionCount++\n          } \n        }\n        // place ship info if checkPositionCoun = size of ship\n        if(checkPositionCount === shipInfo[shipNamePosition][2]){\n          for(let i = 0; i<shipInfo[shipNamePosition][2];i++){\n            //x*boardSize+y : start of array, i*digit: next position adder\n            boardArray[x*boardSize+y+i*digit]=shipInfo[shipNamePosition][0]*10\n            //collect a ship position\n            currentShipPosition.push(x*boardSize+y+i*digit)\n            currentShipHitCondition.push(1)\n          }\n          noOfShip--;\n          // add a ship postion to ship position array\n          shipPosition.push(currentShipPosition);\n          shipHitCondition.push(currentShipHitCondition);\n          // reset current ship position array\n          currentShipPosition=[];\n          currentShipHitCondition=[];\n          loopBreaker--;\n        }\n      }\n    }\n    shipCount--;\n  }\n\n  this.setState({boardArray:boardArray, shipPosition:shipPosition, shipHitCondition:shipHitCondition, boardColWidth:boardColWidth, battleShipRemains:battleShipRemains, battleShipTotal:battleShipTotal, boxSize:boxSize})\n  // console.log(\"shipInfo\",shipInfo)\n  // console.log(\"boardArray\", boardArray)\n  // console.log(\"shipPosition\",shipPosition)\n  // console.log(\"shipHitCondition\", shipHitCondition)\n  // console.log(\"boardColWidth\",boardColWidth)\n}\n\nreset=()=>{\n  window.location.reload()  \n}\n\n\n\ncreateBoard=()=>{\n  let {boardArray, boardSize}=this.state;\n  boardArray=Array(boardSize**2).fill(0)\n  this.setState=({boardArray:boardArray})\n}\n\nplaceShip=()=>{\n  let {boardSize, boardArray, shipInfo, shipPosition}=this.state;\n  let shipCount = shipInfo.length;\n  let currentShipPosition=[];\n  let loopBreaker = 100;\n  boardArray = Array(boardSize**2).fill(0);\n  // this.createBoard();\n  while(shipCount > 0){\n    let shipNamePosition = shipInfo.length - shipCount\n    let noOfShip = shipInfo[shipNamePosition][3]\n    while(noOfShip>0){\n      let firstShipPosition = Math.floor(Math.random()*boardSize**2)\n      let shipDirection = Math.floor(Math.random()*2)\n      let x = Math.trunc(firstShipPosition/boardSize)%boardSize; \n      let y = firstShipPosition % boardSize;\n      // console.log(\"   \")\n      // console.log(\"1  firstShipPosition: \", firstShipPosition)\n      // console.log(\"loopBreaker:\", loopBreaker)\n      if(loopBreaker<0){\n        noOfShip--\n        shipCount--\n        break;\n      }\n      // console.log(\"ship size: shipname\", shipInfo[shipNamePosition][2], shipInfo[shipNamePosition][1])\n      // console.log(\"shipDirection:\", shipDirection)\n      // console.log(\"x,y : \", x, y)\n      // console.log(\"x0+ship size\", x + shipInfo[shipNamePosition][2])\n      // console.log(\"y1+ship size\", y + shipInfo[shipNamePosition][2])\n      if((shipDirection === 0 && x + shipInfo[shipNamePosition][2]<boardSize)||(shipDirection === 1 && y + shipInfo[shipNamePosition][2]<boardSize)){\n        // console.log(\"  x, y :after \", x, y)\n        let digit = shipDirection ===0 ? boardSize**1:boardSize**0\n        // console.log(\"digit\",digit)\n        // console.log(\"shipInfo[shipNamePosition][2]\",shipInfo[shipNamePosition][2])\n        let checkPositionCount = 0;\n        for(let i = 0;i<shipInfo[shipNamePosition][2];i++){\n          // console.log(\"ship pos:\", x*boardSize+y+i*digit, boardArray[x*boardSize+y+i*digit])\n          if(boardArray[x*boardSize+y+i*digit]===0){\n            checkPositionCount++\n          } else {\n            loopBreaker--;\n            break;\n          }\n          // console.log(\"checkPositionCount\", checkPositionCount)\n          if(loopBreaker<0){\n            break;\n          }\n        }\n        if(checkPositionCount === shipInfo[shipNamePosition][2]){\n          for(let i = 0; i<shipInfo[shipNamePosition][2];i++){\n            boardArray[x*boardSize+y+i*digit]=shipInfo[shipNamePosition][0]*10;\n            currentShipPosition.push(x*boardSize+y+i*digit)\n          }\n          noOfShip--;\n          shipPosition.push(currentShipPosition);\n          currentShipPosition=[];\n          loopBreaker--;\n        }\n      }\n    }\n    shipCount--;\n    loopBreaker--;\n    if(loopBreaker<0){\n      break;\n    }\n\n  }\n\n  this.setState({boardArray:boardArray, shipPosition:shipPosition})\n  console.log(boardArray)\n}\n\n\nfireClick = e =>{\n  let cellId = parseInt(e.target.id);\n  let {boardArray, boardSize, torpedoCount, shipInfo, shipPosition, shipHitCondition, shipHitMessage, winStatus, battleShipRemains, clickedCellArray}=this.state\n  console.log(\" \")\n  console.log(this.state)\n\n  var x = document.getElementById(cellId);\n  console.log(\"x: \",x)\n \n  // if torpedo count >0, ones' digit of cell === 0, and win is not declared\n  if(torpedoCount>0 && boardArray[cellId]%boardSize===0 && winStatus===\"\" ){\n    // increase one\n    boardArray[cellId]++;\n    torpedoCount--;\n    // ship hit message reset\n    shipHitMessage=\"\";\n    // ships are in the cell\n    if(boardArray[cellId]>1){\n      //get x, y position by cell Id on ship postion array\n      let pos = this.getIndexOfHit(shipPosition,cellId);\n      // ship hit condition to from 1 to 0\n      shipHitCondition[pos[0]][pos[1]]=0;\n      // calculate individual ship block remains\n      let shipRemain = shipHitCondition[pos[0]].reduce((a,b)=> a+b)\n      // calculate total ship block remains\n      let totalShipRemain = shipHitCondition.reduce((a,b)=> a.concat(b)).reduce((a,b)=>a+b)\n      if(totalShipRemain===0){\n        winStatus = \"You won the game\";\n        //make zero for ship remain count\n        for(let i=0; i<shipInfo.length;i++){\n          shipInfo[i][4]=0\n        }\n        //reset total battle ship remain to zero\n        battleShipRemains = 0;\n      } else if(torpedoCount===0){\n        // torpedo count is zero, game lost\n        winStatus = \"You lost the game\";\n      } else if(shipRemain===0){\n        //ship block to zero, then make ship hit message.\n        //boardArray[cellId] = cel value 11, 21, 31, 41, 51.\n        //divde by 10, then value = 1, 2, 3,4,5 then search value in shipInfo to check ship's name\n          shipHitMessage = `${shipInfo[Math.trunc(boardArray[cellId]/boardSize)-1][1]} has been destroyed` ;\n          // reduce ship remain count\n          shipInfo[Math.trunc(boardArray[cellId]/boardSize)-1][4]--;\n          // calculate total ship remain from shipInfo array\n          battleShipRemains = shipInfo.map(v=>v[4]).reduce((a,b)=>a+b);\n      }\n    } else {\n      if(torpedoCount===0){\n        winStatus = \"You lost the game\";\n        // change background color\n        x.style.backgroundColor = 'gray';\n      }\n\n    }\n    if(boardArray[cellId]>1){\n      // change color if ship has been hit\n      x.style.backgroundColor = 'red';\n    } else {\n      // chnage color if torpedo missed\n      x.style.backgroundColor = 'gray';\n    }\n    clickedCellArray.push(x);\n    console.log(\"clickedCellArray\", clickedCellArray)\n    console.log(\"clickedCellArray id\", clickedCellArray[0].id)\n  }\n\n  this.setState({boardArray:boardArray, torpedoCount:torpedoCount, shipPosition:shipPosition, shipHitCondition:shipHitCondition, shipHitMessage:shipHitMessage, winStatus:winStatus, battleShipRemains:battleShipRemains, clickedCellArray:clickedCellArray})\n}\n\n// return [x, y] from array & number\ngetIndexOfHit = (arr, k) =>{\n    if (!arr){\n        return [];\n    }\n    for(let i=0; i<arr.length; i++){\n        let index = arr[i].indexOf(k);\n        if (index > -1){\n            return [i, index];\n        }\n    }\n    return [];\n}\n\n  render(){\n    console.log('render state', this.state)\n    let grids = this.state.boardArray.map((v, i)=>{\n      return (\n        <Board id = {i} fireClick={this.fireClick} boardValue={this.state.boardArray[i]} boxSize={this.state.boxSize} />\n        )\n    })\n\n    let gridStyle={\n      display: 'grid',\n      margin: 'auto',\n      justifyContent: 'center',\n      gridTemplateColumns: this.state.boardColWidth.join(' ')\n    }\n    return(\n      <div>\n        <Header boardInfo={this.state} />\n        <div style={gridStyle}>\n          {grids}\n        </div>\n        <GameInfo boardInfo={this.state} reset={this.reset}/>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}